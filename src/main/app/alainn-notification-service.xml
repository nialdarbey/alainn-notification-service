<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder"
	xmlns:apple-push="http://www.mulesoft.org/schema/mule/apple-push"
	xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:twilio="http://www.mulesoft.org/schema/mule/twilio"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/twilio http://www.mulesoft.org/schema/mule/twilio/1.0/mule-twilio.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/apple-push http://www.mulesoft.org/schema/mule/apple-push/3.4/mule-apple-push.xsd
http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd">

	<https:connector name="httpsConnector" cookieSpec="netscape"
		validateConnections="true" sendBufferSize="0" receiveBufferSize="0"
		receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000"
		socketSoLinger="0" doc:name="HTTP\HTTPS">
		<service-overrides
			messageFactory="org.mule.transport.http.HttpMultipartMuleMessageFactory" />
		<https:tls-key-store path="keystore.jks"
			keyPassword="changeit" storePassword="changeit" />
	</https:connector>
	<mulexml:namespace-manager
		includeConfigNamespaces="true">
		<mulexml:namespace prefix="mes"
			uri="http://www.alainn.com/SOA/message/1.0" />
		<mulexml:namespace prefix="mod"
			uri="http://www.alainn.com/SOA/model/1.0" />
	</mulexml:namespace-manager>
    <secure-property-placeholder:config name="Secure_Property_Placeholder" key="${props.key}" location="config.${env}.properties" doc:name="Secure Property Placeholder"/>
	<db:mysql-config name="MySQL_Configuration"
		host="${db.host}"
		port="3306" user="${db.user}" password="${db.password}" database="${db.database}"
		doc:name="MySQL Configuration" />
	<apple-push:config name="Apple_Push_Notifications"
		host="gateway.push.apple.com" port="2195" keystore="pushNotificationsProd.p12" keystorePassword="${apple.keystore.passsword}"
		doc:name="Apple Push Notifications" />
	<smtp:gmail-connector name="Gmail"
		validateConnections="true" doc:name="Gmail" />

	<data-mapper:config name="XML_To_Map"
		transformationGraphPath="xml_to_map.grf" doc:name="XML_To_Map" />
	<twilio:config name="Twilio" accountSid="${twilio.account.sid}"
		authToken="${twilio.auth.token}" doc:name="Twilio">
		<twilio:http-callback-config></twilio:http-callback-config>
	</twilio:config>

	<flow name="NotificationserviceFlow1" doc:name="NotificationserviceFlow1">
		<https:inbound-endpoint exchange-pattern="request-response"
			host="localhost" port="${https.port}" path="notification-service"
			doc:name=":8081/notification-service" connector-ref="httpsConnector" />
		<cxf:proxy-service doc:name="Proxy service"
			namespace="http://www.alainn.com/SOA/service/Notification/1.0" port="NotificationPort"
			service="NotificationService" wsdlLocation="service/NotificationService.wsdl"
			payload="body">
			<cxf:schemaLocations>
				<cxf:schemaLocation>service/SOA-Message-1.0.xsd</cxf:schemaLocation>
			</cxf:schemaLocations>
		</cxf:proxy-service>
		<set-variable variableName="opName"
			value="#[xpath('fn:local-name(/*)')]" doc:name="opName" />
		<choice doc:name="Choice">
			<when expression="#[opName == 'notifySKUItemMovement']">
				<flow-ref name="notify" doc:name="notify" />
				<parse-template location="notifiySkuItemMovementResponse.xml"
					doc:name="notifiySkuItemMovementResponse.xml" />
			</when>
			<otherwise>
				<scripting:component doc:name="Exception">
					<scripting:script engine="Groovy"><![CDATA[throw new RuntimeException("Unknown Operation: " + flowVars.opName);]]></scripting:script>
				</scripting:component>
			</otherwise>
		</choice>
		<catch-exception-strategy doc:name="Catch Exception Strategy">
			<logger message="We don't care too much!" level="INFO"
				doc:name="We don't care too much!" />
		</catch-exception-strategy>

	</flow>

	<sub-flow name="notify" doc:name="notify">
		<set-variable variableName="customerId"
			value="#[xpath:/mes:notifySKUItemMovement/mod:CustomerId]" doc:name="customerId" />
		<mulexml:dom-to-xml-transformer
			doc:name="DOM to XML" />
		<data-mapper:transform config-ref="XML_To_Map"
			doc:name="XML To Map" />
		<collection-splitter doc:name="Collection Splitter" />
		<db:select config-ref="MySQL_Configuration"
			doc:name="select customers whose wish matches sku but haven't received a notification in last 24 hrs">
            <db:parameterized-query><![CDATA[select mt.token, c.first_name, c.email, c.mobile, nt.notification_type_id, nt.notification_type_name, si.sku_name, w.id
				from wish w, customer c, notification_preference np, notification_type nt, sku_item si, mobile_token mt
				where w.active = true
				and w.customer_id != #[customerId]
				and w.sku_item_id = #[payload.sku]
				and w.customer_id = c.id
				and c.id = np.customer_id
				and c.id = mt.customer_id
				and w.sku_item_id = si.sku_id
				and np.notification_type_id = nt.notification_type_id
				and not w.id in
					(select n.wish_id from notification n, wish w, sku_item si
					where n.wish_id = w.id
					and w.sku_item_id = si.sku_id
					and w.customer_id != #[customerId]
										and datediff(n.date, curdate()) <= 1)]]></db:parameterized-query>
		</db:select>
		<expression-filter expression="#[ payload.size() &gt; 0]"
			doc:name="not empty" />
		<foreach doc:name="For Each Record in ResultSet">
			<vm:outbound-endpoint exchange-pattern="one-way"
				path="#[payload.notification_type_name]" doc:name="email | sms | web | apple-push" />
		</foreach>
		<db:insert config-ref="MySQL_Configuration" bulkMode="true"
			doc:name="Bulk insert notification">
            <db:parameterized-query><![CDATA[insert into notification(wish_id, notification_type_id) values(#[payload.id], #[payload.notification_type_id])]]></db:parameterized-query>
		</db:insert>
	</sub-flow>
	<flow name="sms" doc:name="sms">
		<vm:inbound-endpoint exchange-pattern="one-way"
			path="sms" doc:name="sms" />
		<logger level="INFO" doc:name="Logger" />
		<twilio:send-sms-message config-ref="Twilio"
			body="Hello #[payload.first_name]. 
			Your Wish-list item, #[payload.sku_name], is in high demand. Better hurry 
			up if you want to grab one before we run out! :)"
			from="+5491169834192" to="#[payload.mobile]" doc:name="SMS Notification" />

	</flow>
	<flow name="mobile-push" doc:name="mobile-push">
		<vm:inbound-endpoint exchange-pattern="one-way"
			path="apple-push" doc:name="apple-push" />
		<apple-push:send deviceToken="#[payload.token]"
			alert="Hello #[payload.first_name]. Your Wish-list item, #[payload.sku_name], is in high demand. Better hurry up if you want to grab one before we run out! :)"
			sound="default" config-ref="Apple_Push_Notifications" doc:name="Apple Push Notification">
		</apple-push:send>
	</flow>
		<flow name="email" doc:name="email">
		<vm:inbound-endpoint exchange-pattern="one-way"
			path="email" doc:name="email" />
		<set-variable variableName="config" value="#[payload]"
			doc:name="config" />
		<parse-template location="Email.html" doc:name="Email.html" />
		<set-property propertyName="contentType" value="text/html" doc:name="Property"/>
		<smtp:outbound-endpoint host="smtp.gmail.com"
			responseTimeout="10000" doc:name="Email notification" connector-ref="Gmail"
			from="notifications@alainn-cosmetics.com" password="Mule1379"
			subject="Your wish list item is running out of stock" to="#[config.email]"
			user="muleworkshop1" replyTo="notifications@alainn-cosmetics.com"
			mimeType="text/html">
			<email:string-to-email-transformer />
			<properties>
				<spring:entry key="mail.smtp.auth" value="true" />
				<spring:entry key="mail.smtp.ssl.enable" value="true" />
			</properties>
		</smtp:outbound-endpoint>
	</flow>
	<flow name="web" doc:name="web">
		<vm:inbound-endpoint exchange-pattern="one-way"
			path="web" doc:name="web" />
		<http:outbound-endpoint exchange-pattern="request-response"
			host="localhost" port="8081" method="POST" doc:name="Firebase Notification" />
	</flow>

	<flow name="alainn-notification-serviceFlow1" doc:name="alainn-notification-serviceFlow1">
		<http:inbound-endpoint exchange-pattern="request-response"
			host="localhost" port="8081" path="testsms" doc:name="HTTP" />
		<expression-transformer doc:name="Expression"
			expression="
        	[ 'first_name' : 'Nial', 'sku_name' : 'Soap', 'mobile' : '+5491169834192', 'email' : 'nial.darbey@mulesoft.com', 'body' : 'Hi Nial']
        " />
        <data-mapper:transform doc:name="DataMapper"/>
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="email" doc:name="email" />


	</flow>




</mule>
